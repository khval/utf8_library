#ifndef UTF8_INTERFACE_DEF_H
#define UTF8_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.24.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_UTF8_H
#include <libraries/UTF8.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct UTF8IFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct UTF8IFace *Self);
	ULONG APICALL (*Release)(struct UTF8IFace *Self);
	APTR Expunge_UNIMPLEMENTED;
	APTR Clone_UNIMPLEMENTED;
	int APICALL (*CaseCmp)(struct UTF8IFace *Self, unsigned char * UTF8_alphabet, unsigned char * UTF8_one, unsigned char * UTF8_two);
	int APICALL (*Cmp)(struct UTF8IFace *Self, unsigned char * UTF8_alphabet, unsigned char * UTF8_one, unsigned char * UTF8_two);
	unsigned char * APICALL (*Decode)(struct UTF8IFace *Self, ULONG codeset_page, unsigned char * UTF8, ULONG flags);
	unsigned char * APICALL (*DecodeLen)(struct UTF8IFace *Self, ULONG codeset_page, unsigned char * UTF8, ULONG len, ULONG flags);
	unsigned char * APICALL (*Encode)(struct UTF8IFace *Self, ULONG codeset_page, char * ascii, ULONG flags);
	int APICALL (*EstimateByteSize)(struct UTF8IFace *Self, ULONG glyph);
	ULONG APICALL (*FindGlyph)(struct UTF8IFace *Self, unsigned char * UTF8_alphabet, ULONG glyph);
	ULONG APICALL (*GetGlyph)(struct UTF8IFace *Self, unsigned char data, int * len);
	ULONG APICALL (*GetGlyphAt)(struct UTF8IFace *Self, unsigned char data, int pos, int * len);
	 APICALL (*GetOffsetSize)(struct UTF8IFace *Self, unsigned char * UTF8, int to_pos);
	 APICALL (*GetSize)(struct UTF8IFace *Self, unsigned char * UTF8);
	int APICALL (*IndexOf)(struct UTF8IFace *Self, unsigned char * UTF8, unsigned char * find);
	unsigned char * APICALL (*Insert)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, unsigned char ** UTF8_insert, ULONG mem_flags);
	unsigned char * APICALL (*Left)(struct UTF8IFace *Self, unsigned char * UTF8, int len, ULONG mem_flags);
	 APICALL (*Length)(struct UTF8IFace *Self, unsigned char * UTF8);
	unsigned char * VARARGS68K  APICALL (*Merge)(struct UTF8IFace *Self, ULONG mem_flags,  ...);
	BOOL APICALL (*ModInsert)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, unsigned char ** UTF8_insert, ULONG mem_flags);
	BOOL APICALL (*ModLeft)(struct UTF8IFace *Self, unsigned char ** UTF8, int len, ULONG mem_flags);
	BOOL APICALL (*ModRemove)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, int len, ULONG mem_flags);
	BOOL APICALL (*ModRight)(struct UTF8IFace *Self, unsigned char ** UTF8, int len, ULONG mem_flags);
	BOOL APICALL (*ModSubString)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, int len, ULONG mem_flags);
	BOOL APICALL (*ModToLower)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned char ** UTF8, ULONG mem_flags);
	BOOL APICALL (*ModToUpper)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned char ** UTF8, ULONG mem_flags);
	BOOL APICALL (*ModTrim)(struct UTF8IFace *Self, unsigned char ** UTF8, ULONG mem_flags);
	void APICALL (*Printf)(struct UTF8IFace *Self, ULONG * codeset_page, unsigned char * utf8_fmt,  ...);
	unsigned char * APICALL (*Remove)(struct UTF8IFace *Self, unsigned int * UTF8, int start, int len, ULONG mem_flags);
	unsigned char * APICALL (*Right)(struct UTF8IFace *Self, unsigned int * UTF8, int len, ULONG mem_flags);
	ULONG APICALL (*SetGlyph)(struct UTF8IFace *Self, ULONG glyph, unsigned char * data);
	 APICALL (*SubString)(struct UTF8IFace *Self, unsigned int * UTF8, int start, int len, ULONG mem_flags);
	 APICALL (*ToLower)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned int * UTF8, ULONG mem_flags);
	 APICALL (*ToUpper)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned int * UTF8, ULONG mem_flags);
	 APICALL (*Trim)(struct UTF8IFace *Self, unsigned char * UTF8, ULONG mem_flags);
	void APICALL (*TextUTF8Extent)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned int * UTF8, struct TextExtent * ext);
	void APICALL (*TextUTF8ExtentN)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned int * UTF8, int n, struct TextExtent * ext);
	int APICALL (*TextUTF8Length)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned int * UTF8);
	int APICALL (*TextUTF8LengthN)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned int * UTF8, int n);
	void APICALL (*TextUTF8)(struct UTF8IFace *Self, struct RastPort * rp, struct OutlineFont * ofont, float font_size, int xpos, int ypos, unsigned int * UTF8);
	void APICALL (*TextUTF8N)(struct UTF8IFace *Self, struct RastPort * rp, struct OutlineFont * ofont, float font_size, int xpos, int ypos, unsigned int * UTF8, int n);
	void APICALL (*TextUTF32)(struct UTF8IFace *Self, struct RastPort * rp, struct OutlineFont * ofont, float font_size, int xpos, int ypos, ULONG * UTF32);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* UTF8_INTERFACE_DEF_H */
