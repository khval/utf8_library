#ifndef UTF8_INTERFACE_DEF_H
#define UTF8_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.1.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_UTF8_H
#include <libraries/UTF8.h>
#include <proto/diskfont.h>
#include <proto/intuition.h>
#include <proto/graphics.h>
#include <diskfont/diskfonttag.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct UTF8IFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct UTF8IFace *Self);
	ULONG APICALL (*Release)(struct UTF8IFace *Self);
	void APICALL (*Expunge)(struct UTF8IFace *Self);
	struct Interface * APICALL (*Clone)(struct UTF8IFace *Self);
	ULONG APICALL (*CaseCmp) (struct UTF8IFace *Self, unsigned char *UTF8_alphabet, unsigned char *UTF8_one,  unsigned char *UTF8_two);
	ULONG APICALL (*Cmp) (struct UTF8IFace *Self, unsigned char *UTF8_alphabet, unsigned char *UTF8_one,  unsigned char *UTF8_two);
	unsigned char * APICALL (*Copy)(struct UTF8IFace *Self,unsigned char *UTF8, ULONG mem_flags );
	char * APICALL (*Decode)(struct UTF8IFace *Self, ULONG *codeset_page, unsigned char * UTF8, ULONG mem_flags);
	char * APICALL (*DecodeN)(struct UTF8IFace *Self, ULONG *codeset_page, unsigned char * UTF8, ULONG len, ULONG mem_flags);
	unsigned char * APICALL (*Encode)(struct UTF8IFace *Self, ULONG *codeset_page,char * ascii,  ULONG mem_flags);
	ULONG APICALL (*EstimateByteSize)(struct UTF8IFace *Self, ULONG glyph);
	ULONG APICALL (*FindGlyph) (struct UTF8IFace *Self,unsigned char *UTF8_alphabet, ULONG glyph );
	ULONG APICALL (*GetGlyph) (struct UTF8IFace *Self, unsigned char *UTF8, int * len);
	ULONG APICALL (*GetGlyphAt) (struct UTF8IFace *Self, unsigned char *UTF8, int pos, int * len);
	ULONG APICALL (*GetOffsetSize) (struct UTF8IFace *Self, unsigned char * UTF8, int _len);
	int APICALL (*GetSize)(struct UTF8IFace *Self, unsigned char * utf8);
	int APICALL (*IndexOf)(struct UTF8IFace *Self, unsigned char * utf8, unsigned char * find_utf8);
	unsigned char * APICALL (*Insert) (struct UTF8IFace *Self,unsigned char *UTF8, int _start, unsigned char *UTF8_insert , ULONG flags );
	unsigned char * APICALL (*Left) (struct UTF8IFace *Self, unsigned char *UTF8, int _len, ULONG mem_flags );
	ULONG APICALL (*Length)(struct UTF8IFace *Self, unsigned char * utf8);
	unsigned char * APICALL (*Merge) (struct UTF8IFace *Self, ULONG mem_flags, ... );
	BOOL APICALL (*ModInsert) (struct UTF8IFace *Self, unsigned char **UTF8, int _start, unsigned char *UTF8_insert , ULONG flags );
	BOOL APICALL	(*ModLeft) (struct UTF8IFace *Self, unsigned char **UTF8, int _len, ULONG mem_flags );
	BOOL APICALL (*ModRemove) (struct UTF8IFace *Self,	unsigned char **UTF8, int _start, int _len, ULONG flags );
	BOOL APICALL	(*ModRight) (struct UTF8IFace *Self,  unsigned char **UTF8, int _len, ULONG mem_flags );
	BOOL APICALL	(*ModSubString) (struct UTF8IFace *Self,unsigned char **UTF8, int _start, int _len, ULONG flags );
	BOOL APICALL	(*ModToLower) (struct UTF8IFace *, unsigned char *alphabet_UTF8, unsigned char **UTF8, ULONG mem_flags);
	BOOL APICALL	(*ModToUpper) (struct UTF8IFace *, unsigned char *alphabet_UTF8, unsigned char **UTF8, ULONG mem_flags);
	BOOL APICALL	(*ModTrim) (struct UTF8IFace *Self, unsigned char **UTF8, ULONG mem_flags );
	void APICALL (*Printf) (struct UTF8IFace *Self,ULONG *codeset_page, unsigned char *utf8_fmt, ...);
	unsigned char * APICALL (*Remove) (struct UTF8IFace *Self,unsigned char *UTF8, int _start, int _len, ULONG flags );
	unsigned char * APICALL (*Right) (struct UTF8IFace *Self, unsigned char *UTF8, int _len, ULONG mem_flags );
	ULONG APICALL (*SetGlyph)(struct UTF8IFace *Self, ULONG glyph, unsigned char * data);
	unsigned char * APICALL (*SubString) (struct UTF8IFace *Self, unsigned char *UTF8, int _start, int _len, ULONG mem_flags );
	unsigned char * APICALL (*ToLower)(struct UTF8IFace *Self, unsigned char *alphabet_UTF8, unsigned char *UTF8, ULONG mem_flags );
	unsigned char * APICALL (*ToUpper)(struct UTF8IFace *Self, unsigned char *alphabet_UTF8, unsigned char *UTF8, ULONG mem_flags );
	unsigned char * APICALL (*Trim) (struct UTF8IFace *Self, unsigned char *UTF8, ULONG mem_flags );
	void APICALL (*TextUTF8) (struct UTF8IFace *Self, struct RastPort *rp,struct OutlineFont *ofont, float font_size, int xpos, int ypos, unsigned char *UTF8 );
	void APICALL (*TextUTF8N) (struct UTF8IFace *Self, struct RastPort *rp,struct OutlineFont *ofont, float font_size, int xpos, int ypos, unsigned char *UTF8, int len );
	void APICALL (*TextUTF8Extent) (struct UTF8IFace *Self, struct OutlineFont *ofont, float font_size, unsigned char *UTF8, struct TextExtent *ext );
	void APICALL (*TextUTF8ExtentN) (struct UTF8IFace *Self, struct OutlineFont *ofont, float font_size, unsigned char *UTF8, int len, struct TextExtent *ext );
	int APICALL (*TextUTF8Length) (struct UTF8IFace *Self, struct OutlineFont *ofont, float font_size, unsigned char *UTF8 );
	int APICALL (*TextUTF8LengthN) (struct UTF8IFace *Self, struct OutlineFont *ofont, float font_size, unsigned char *UTF8, int len );
	void APICALL (*TextUTF32) ( struct UTF8IFace *Self,struct RastPort *rp,struct OutlineFont *ofont, float font_size, int xpos, int ypos, ULONG *UTF32 );
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* UTF8_INTERFACE_DEF_H */
