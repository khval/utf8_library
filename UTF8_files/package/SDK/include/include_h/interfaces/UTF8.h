#ifndef UTF8_INTERFACE_DEF_H
#define UTF8_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.24.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_UTF8_H
#include <libraries/UTF8.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct UTF8IFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct UTF8IFace *Self);
	ULONG APICALL (*Release)(struct UTF8IFace *Self);
	APTR Expunge_UNIMPLEMENTED;
	APTR Clone_UNIMPLEMENTED;
	int APICALL (*UTF8CaseCmp)(struct UTF8IFace *Self, unsigned char * UTF8_alphabet, unsigned char * UTF8_one, unsigned char * UTF8_two);
	int APICALL (*UTF8Cmp)(struct UTF8IFace *Self, unsigned char * UTF8_alphabet, unsigned char * UTF8_one, unsigned char * UTF8_two);
	char * APICALL (*UTF8Decode)(struct UTF8IFace *Self, ULONG * codeset_page, unsigned char * UTF8, ULONG flags);
	char * APICALL (*UTF8DecodeLen)(struct UTF8IFace *Self, ULONG * codeset_page, unsigned char * UTF8, ULONG len, ULONG flags);
	unsigned char * APICALL (*UTF8Encode)(struct UTF8IFace *Self, ULONG * codeset_page, char * ascii, ULONG flags);
	int APICALL (*UTF8EstimateByteSize)(struct UTF8IFace *Self, ULONG glyph);
	ULONG APICALL (*UTF8FindGlyph)(struct UTF8IFace *Self, unsigned char * UTF8_alphabet, ULONG glyph);
	ULONG APICALL (*UTF8GetGlyph)(struct UTF8IFace *Self, unsigned char * UTF8, int * len);
	ULONG APICALL (*UTF8GetGlyphAt)(struct UTF8IFace *Self, unsigned char * UTF8, int pos, int * len);
	ULONG APICALL (*UTF8GetOffsetSize)(struct UTF8IFace *Self, unsigned char * UTF8, int to_pos);
	ULONG APICALL (*UTF8GetSize)(struct UTF8IFace *Self, unsigned char * UTF8);
	int APICALL (*UTF8IndexOf)(struct UTF8IFace *Self, unsigned char * UTF8, unsigned char * find);
	unsigned char * APICALL (*UTF8Insert)(struct UTF8IFace *Self, unsigned char * UTF8, int start, unsigned char * UTF8_insert, ULONG mem_flags);
	unsigned char * APICALL (*UTF8Left)(struct UTF8IFace *Self, unsigned char * UTF8, int len, ULONG mem_flags);
	ULONG APICALL (*UTF8Length)(struct UTF8IFace *Self, unsigned char * UTF8);
	unsigned char * APICALL (*UTF8Merge)(struct UTF8IFace *Self, ULONG mem_flags,  ...);
	BOOL APICALL (*UTF8ModInsert)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, unsigned char * UTF8_insert, ULONG mem_flags);
	BOOL APICALL (*UTF8ModLeft)(struct UTF8IFace *Self, unsigned char ** UTF8, int len, ULONG mem_flags);
	BOOL APICALL (*UTF8ModRemove)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, int len, ULONG mem_flags);
	BOOL APICALL (*UTF8ModRight)(struct UTF8IFace *Self, unsigned char ** UTF8, int len, ULONG mem_flags);
	BOOL APICALL (*UTF8ModSubString)(struct UTF8IFace *Self, unsigned char ** UTF8, int start, int len, ULONG mem_flags);
	BOOL APICALL (*UTF8ModToLower)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned char ** UTF8, ULONG mem_flags);
	BOOL APICALL (*UTF8ModToUpper)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned char ** UTF8, ULONG mem_flags);
	BOOL APICALL (*UTF8ModTrim)(struct UTF8IFace *Self, unsigned char ** UTF8, ULONG mem_flags);
	void APICALL (*UTF8Printf)(struct UTF8IFace *Self, ULONG * codeset_page, unsigned char * utf8_fmt,  ...);
	unsigned char * APICALL (*UTF8Remove)(struct UTF8IFace *Self, unsigned char * UTF8, int start, int len, ULONG mem_flags);
	unsigned char * APICALL (*UTF8Right)(struct UTF8IFace *Self, unsigned char * UTF8, int len, ULONG mem_flags);
	ULONG APICALL (*UTF8SetGlyph)(struct UTF8IFace *Self, ULONG glyph, unsigned char * data);
	unsigned char * APICALL (*UTF8SubString)(struct UTF8IFace *Self, unsigned char * UTF8, int start, int len, ULONG mem_flags);
	unsigned char * APICALL (*UTF8ToLower)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned char * UTF8, ULONG mem_flags);
	unsigned char * APICALL (*UTF8ToUpper)(struct UTF8IFace *Self, unsigned char * alphabet_UTF8, unsigned char * UTF8, ULONG mem_flags);
	unsigned char * APICALL (*UTF8Trim)(struct UTF8IFace *Self, unsigned char * UTF8, ULONG mem_flags);
	void APICALL (*UTF8TextExtent)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned char * UTF8, struct TextExtent * ext);
	void APICALL (*UTF8TextExtentN)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned char * UTF8, int n, struct TextExtent * ext);
	int APICALL (*UTF8TextLength)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned char * UTF8);
	int APICALL (*UTF8TextLengthN)(struct UTF8IFace *Self, struct OutlineFont * ofont, float font_size, unsigned char * UTF8, int n);
	void APICALL (*UTF8Text)(struct UTF8IFace *Self, struct RastPort * rp, struct OutlineFont * ofont, float font_size, int xpos, int ypos, unsigned char * UTF8);
	void APICALL (*UTF8TextN)(struct UTF8IFace *Self, struct RastPort * rp, struct OutlineFont * ofont, float font_size, int xpos, int ypos, unsigned char * UTF8, int n);
	void APICALL (*UTF32Text)(struct UTF8IFace *Self, struct RastPort * rp, struct OutlineFont * ofont, float font_size, int xpos, int ypos, ULONG * UTF32);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* UTF8_INTERFACE_DEF_H */
