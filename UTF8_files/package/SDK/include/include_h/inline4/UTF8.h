#ifndef INLINE4_UTF8_H
#define INLINE4_UTF8_H

/*
** This file was auto generated by idltool 53.1.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_UTF8_H
#include <libraries/UTF8.h>
#endif
#include <interfaces/UTF8.h>

/* Inline macros for Interface "main" */
#define UTF8CaseCmp(UTF8_alphabet,UTF8_one,UTF8_two);
#define UTF8Cmp(UTF8_alphabet, UTF8_one,  UTF8_two);
#define UTF8Copy(mem_flags) IUTF8->Copy((mem_flags));
#define UTF8Decode(codeset_page,UTF8,mem_flags) IUTF8->Decode((codeset_page),(UTF8),(mem_flags))
#define UTF8DecodeLen(codeset_page,UTF8,_len,mem_flags) IUTF8->Decode((codeset_page),(UTF8),(_len),(mem_flags))
#define UTF8Encode(codeset_page,ascii) IUTF8->Encode((codeset_page),(ascii), (mem_flags))
#define UTF8EstimateByteSize(glyph) IUTF8->EstimateByteSize((glyph))
#define UTF8GetGlyph(data, len) IUTF8->GetGlyph((data), (len))
#define UTF8GetGlyphAt(data, Pos, len) IUTF8->GetGlyph((data),(Pos),(len))
#define UTF8GetOffsetSize(utf8,len) IUTF8->GetOffsetSize((utf8),(len))
#define UTF8GetSize(utf8) IUTF8->GetSize((utf8))
#define UTF8IndexOf(utf8,find_utf8) IUTF8->IndexOf( (utf8), (find_utf8))
#define UTF8Insert(UTF8, _start,UTF8_insert , flags ) IUTF8->Insert ( (UTF8),(_start),(UTF8_insert),(flags))
#define UTF8Left(UTF8, _len, mem_flags ) IUTF8->Left ( (UTF8), (_len), (mem_flags))
#define UTF8Length (utf8) IUTF8->Length((utf8))
#define UTF8ModInsert(UTF8, _start,UTF8_insert , flags ) IUTF8->ModInsert ( (UTF8),(_start),(UTF8_insert),(flags))
#define UTF8ModLeft(UTF8, _len, mem_flags ) IUTF8->ModLeft ( (UTF8), (_len), (mem_flags))
#define UTF8ModRemove(UTF8,_start,_len, flags) IUTF8->ModRemove((UTF8),(_start),(_len),(flags))
#define UTF8ModRight(UTF8, _len, mem_flags ) 	IUTF8->ModRight((UTF8), (_len), (mem_flags))
#define UTF8ModToLower(alphabet_UTF8,UTF8,mem_flags) IUTF8->ModToLower((alphabet_UTF8),(UTF8),(mem_flags) )
#define UTF8ModToUpper(alphabet_UTF8,UTF8,mem_flags) IUTF8->ModToUpper((alphabet_UTF8),(UTF8),(mem_flags) )
#define UTF8Merge(...) IUTF8->Merge(__VA_ARGS__)
#define UTF8Printf(...) IUTF8->Printf(__VA_ARGS__) 
#define UTF8Remove(UTF8,_start,_len, flags) IUTF8->Remove((UTF8),(_start),(_len),(flags))
#define UTF8Right(UTF8, _len, mem_flags ) 	IUTF8->Right((UTF8), (_len), (mem_flags))
#define UTF8SetGlyph(glyph,data) IUTF8->SetGlyph ((glyph), (data))
#define UTF8SubString(UTF8,_start,_len,mem_flags) IUTF8->SubString ((UTF8),(_start),(_len), (mem_flags))
#define UTF8ToLower(UTF8,alphabet_UTF8, mem_flags) IUTF8->ToLower((alphabet_UTF8),(UTF8),(mem_flags) )
#define UTF8ToUpper(UTF8,alphabet_UTF8, mem_flags ) IUTF8->ToUpper((alphabet_UTF8),(UTF8),(mem_flags) )
#define UTF8Trim( UTF8, mem_flag) IUTF8->Trim ( UTF8, mem_flag )
#endif /* INLINE4_UTF8_H */
