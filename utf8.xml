<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<library name="UTF8" basename="UTF8Base" openname="UTF8.library">
	<include>exec/types.h</include>
	<include>libraries/UTF8.h</include>
	<interface name="main" version="1.0" struct="UTF8IFace" prefix="_UTF8_" asmprefix="IUTF8" global="IUTF8">
		<method name="Obtain" result="ULONG"/>
		<method name="Release" result="ULONG"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>

		<method name="UTF8CaseCmp" result="int">
			<arg name="UTF8_alphabet" type="unsigned char *"/>
			<arg name="UTF8_one" type="unsigned char *"/>
			<arg name="UTF8_two" type="unsigned char *"/>
		</method>

		<method name="UTF8Cmp" result="int">
			<arg name="UTF8_alphabet" type="unsigned char *"/>
			<arg name="UTF8_one" type="unsigned char *"/>
			<arg name="UTF8_two" type="unsigned char *"/>
		</method>

		<method name="UTF8Decode" result="char *">
			<arg name="codeset_page" type="ULONG *"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="flags" type="ULONG"/>
		</method>

		<method name="UTF8DecodeLen" result="char *">
			<arg name="codeset_page" type="ULONG *"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="len" type="ULONG"/>
			<arg name="flags" type="ULONG"/>
		</method>

		<method name="UTF8Encode" result="unsigned char *">
			<arg name="codeset_page" type="ULONG *"/>
			<arg name="ascii" type="char *"/>
			<arg name="flags" type="ULONG"/>
		</method>

		<method name="UTF8EstimateByteSize" result="int">
			<arg name="glyph" type="ULONG"/>
		</method>

		<method name="UTF8FindGlyph" result="ULONG">
			<arg name="UTF8_alphabet" type="unsigned char *"/>
			<arg name="glyph" type="ULONG"/>
		</method>

		<method name="UTF8GetGlyph" result="ULONG">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="len" type="int *"/>
		</method>

		<method name="UTF8GetGlyphAt" result="ULONG">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="pos" type="int"/>
			<arg name="len" type="int *"/>
		</method>

		<method name="UTF8GetOffsetSize" result="ULONG">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="to_pos" type="int"/>
		</method>

		<method name="UTF8GetSize" result="ULONG">
			<arg name="UTF8" type="unsigned char *"/>
		</method>

		<method name="UTF8IndexOf" result="int">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="find" type="unsigned char *"/>
		</method>

		<method name="UTF8Insert" result="unsigned char *">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="start" type="int"/>
			<arg name="UTF8_insert" type="unsigned char *"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8Left" result="unsigned char *">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8Length" result="ULONG">
			<arg name="UTF8" type="unsigned char *"/>
		</method>

		<method name="UTF8Merge" result="unsigned char *">
			<arg name="mem_flags" type="ULONG"/>
			<arg name="..." type=""/>
		</method>

		<method name="UTF8ModInsert" result="BOOL">
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="start" type="int"/>
			<arg name="UTF8_insert" type="unsigned char *"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModLeft" result="BOOL">
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModRemove" result="BOOL">
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="start" type="int"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModRight" result="BOOL">
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModSubString" result="BOOL">
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="start" type="int"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModToLower" result="BOOL">
			<arg name="alphabet_UTF8" type="unsigned char *"/>
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModToUpper" result="BOOL">
			<arg name="alphabet_UTF8" type="unsigned char *"/>
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ModTrim" result="BOOL">
			<arg name="UTF8" type="unsigned char **"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8Printf" result="void">
			<arg name="codeset_page" type="ULONG *"/>
			<arg name="utf8_fmt" type="unsigned char *"/>
			<arg name="..." type=""/>
		</method>

		<method name="UTF8Remove" result="unsigned char *">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="start" type="int"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8Right" result="unsigned char *">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8SetGlyph" result="ULONG">
			<arg name="glyph" type="ULONG"/>
			<arg name="data" type="unsigned char *"/>
		</method>

		<method name="UTF8SubString" result="unsigned char *">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="start" type="int"/>
			<arg name="len" type="int"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ToLower" result="unsigned char *">
			<arg name="alphabet_UTF8" type="unsigned char *"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8ToUpper" result="unsigned char *">
			<arg name="alphabet_UTF8" type="unsigned char *"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8Trim" result="unsigned char *">
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="mem_flags" type="ULONG"/>
		</method>

		<method name="UTF8TextExtent" result="void">
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="ext" type="struct TextExtent *"/>
		</method>

		<method name="UTF8TextExtentN" result="void">
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="n" type="int"/>
			<arg name="ext" type="struct TextExtent *"/>
		</method>

		<method name="UTF8TextLength" result="int">
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="UTF8" type="unsigned char *"/>
		</method>

		<method name="UTF8TextLengthN" result="int">
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="n" type="int"/>
		</method>

		<method name="UTF8Text" result="void">
			<arg name="rp" type="struct RastPort *"/>
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="xpos" type="int"/>
			<arg name="ypos" type="int"/>
			<arg name="UTF8" type="unsigned char *"/>
		</method>

		<method name="UTF8TextN" result="void">
			<arg name="rp" type="struct RastPort *"/>
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="xpos" type="int"/>
			<arg name="ypos" type="int"/>
			<arg name="UTF8" type="unsigned char *"/>
			<arg name="n" type="int"/>
		</method>

		<method name="UTF32Text" result="void">
			<arg name="rp" type="struct RastPort *"/>
			<arg name="ofont" type="struct OutlineFont *"/>
			<arg name="font_size" type="float"/>
			<arg name="xpos" type="int"/>
			<arg name="ypos" type="int"/>
			<arg name="UTF32" type="ULONG *"/>
		</method>

	</interface>
</library>
